# Build and cache mxtools to reuse between jobs
name: Create mxtools cache
on:
    - workflow_call
jobs:
    mxversion:
        name: Read versions file
        runs-on: ubuntu-latest
        outputs:
            mxversion: ${{ steps.readfile.outputs.mxversion }}
            mxbuild_path: ${{ steps.readfile.outputs.mxbuild_path }}
            mxbuild_tag: ${{ steps.readfile.outputs.mxbuild_tag }}
            mxruntime_path: ${{ steps.readfile.outputs.mxruntime_path }}
            mxruntime_tag: ${{ steps.readfile.outputs.mxruntime_tag }}
            mx_tools_cache_key: mx-tools-cache:${{ steps.readfile.outputs.mxversion }}
        steps:
            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 1
            - name: Set job outputs
              id: readfile
              run: |
                  MENDIX_VERSION=$(cat automation/run-e2e/mendix-versions.json | jq -r '.latest')
                  echo "mxversion=$MENDIX_VERSION" | tee -a "$GITHUB_OUTPUT"
                  echo "mxbuild_path=.docker-cache/mxbuild_$MENDIX_VERSION.tar" | tee -a "$GITHUB_OUTPUT"
                  echo "mxbuild_tag=mxbuild:$MENDIX_VERSION" | tee -a "$GITHUB_OUTPUT"
                  echo "mxruntime_path=.docker-cache/mxruntime_$MENDIX_VERSION.tar" | tee -a "$GITHUB_OUTPUT"
                  echo "mxruntime_tag=mxruntime:$MENDIX_VERSION" | tee -a "$GITHUB_OUTPUT"
    build-mxtools:
        name: Build and cache mxtools (mxbuild and mxruntime)
        runs-on: ubuntu-latest
        needs:
            - mxversion
        env:
            MENDIX_VERSION: ${{needs.mxversion.outputs.mxversion}}
            MXBUILD_PATH: ${{needs.mxversion.outputs.mxbuild_path}}
            MXBUILD_TAG: ${{needs.mxversion.outputs.mxbuild_tag}}
            MXRUNTIME_PATH: ${{needs.mxversion.outputs.mxruntime_path}}
            MXRUNTIME_TAG: ${{needs.mxversion.outputs.mxruntime_tag}}
        steps:
            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 1
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
            - name: Create docker-cache dir
              run: mkdir -p .docker-cache
            - name: Cache mxbuild & mxruntime images
              id: cache
              uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
              with:
                  path: |
                      ${{ env.MXBUILD_PATH }}
                      ${{ env.MXRUNTIME_PATH }}
                  key: ${{needs.mxversion.outputs.mx_tools_cache_key}}
                  # If true, only checks if cache entry exists and skips download
                  lookup-only: true
            - name: Build ${{ env.MXBUILD_TAG }}
              if: steps.cache.outputs.cache-hit != 'true'
              uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
              with:
                  file: automation/run-e2e/docker/mxbuild.Dockerfile
                  tags: ${{ env.MXBUILD_TAG }}
                  outputs: type=docker,dest=${{ env.MXBUILD_PATH }}
                  build-args: |
                      MENDIX_VERSION=${{ env.MENDIX_VERSION }}
            - name: Build ${{ env.MXRUNTIME_TAG }}
              if: steps.cache.outputs.cache-hit != 'true'
              uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
              with:
                  file: automation/run-e2e/docker/mxruntime.Dockerfile
                  tags: ${{ env.MXRUNTIME_TAG }}
                  outputs: type=docker,dest=${{ env.MXRUNTIME_PATH }}
                  build-args: |
                      MENDIX_VERSION=${{ env.MENDIX_VERSION }}
