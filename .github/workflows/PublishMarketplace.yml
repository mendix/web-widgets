name: "Publishes a package to marketplace"

on:
    release:
        types: [published]

jobs:
    publish-new-version:
        name: "Publish a new package version from GitHub release"
        runs-on: ubuntu-latest
        env:
            TAG: ${{ github.ref_name }}

        steps:
            - name: Check release tag
              run: |
                  match=$(node -p "(/^[a-z0-9-]+-v\d+\.\d+\.\d+$/m).exec('$TAG') ? 1 : -1")
                  if [ $match -eq -1 ];
                  then
                    echo "::error::Invalid tag format."
                    exit 1
                  fi
            - name: "Set PACKAGE env var"
              run: echo "PACKAGE=${TAG%-v*}" >> $GITHUB_ENV
            - name: Checkout
              uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
              with:
                  fetch-depth: 1
            - name: Setup pnpm
              uses: pnpm/action-setup@d882d12c64e032187b2edb46d3a0d003b7a43598 # v2.4.0
              with:
                  version: ^8.6.2
            - name: Setup node
              uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
              with:
                  node-version-file: ".nvmrc"
                  cache: "pnpm"
            - name: Search for package in workspace
              run: |
                  if [[ -z "$(pnpm ls --json --filter=$PACKAGE)" ]];
                  then
                    echo "::error::Package $PACKAGE not found in workspace.";
                    exit 1;
                  fi
            - name: Install dependencies
              run: pnpm install
            - name: Run publish script
              run: pnpm run publish-marketplace --filter=$PACKAGE
              env:
                  CPAPI_URL: ${{ secrets.CPAPI_URL }}
                  CPAPI_USER: ${{ secrets.CPAPI_USER }}
                  CPAPI_USER_OPENID: ${{ secrets.CPAPI_USER_OPENID }}
                  CPAPI_PASS: ${{ secrets.CPAPI_PASS }}
