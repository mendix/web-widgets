// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccordionGroup collapsible header doesn't render the icon when set to not visible 1`] = `
<section
  className="widget-accordion-group widget-accordion-group-collapsed class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={false}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group becomes visible and is collapsed 1`] = `
<section
  className="widget-accordion-group widget-accordion-group-collapsed class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={false}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group becomes visible and is expanded 1`] = `
<section
  className="widget-accordion-group class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={true}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group is visible and collapsed 1`] = `
<section
  className="widget-accordion-group widget-accordion-group-collapsed class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={false}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group is visible and expanded 1`] = `
<section
  className="widget-accordion-group class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={true}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group is visible and gets collapsed 1`] = `
<section
  className="widget-accordion-group widget-accordion-group-collapsed class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={false}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup collapsible renders correctly when the group is visible and gets expanded 1`] = `
<section
  className="widget-accordion-group class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={false}
      aria-expanded={true}
      className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
      data-focusindex={0}
      id="idHeaderButton"
      onClick={[MockFunction]}
      onKeyDown={[Function]}
      role="button"
      tabIndex={0}
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup doesn't render when the group isn't visible 1`] = `""`;

exports[`AccordionGroup doesn't render widgets when 'loadContent' is 'whenExpanded' 1`] = `
<AccordionGroup
  animateContent={false}
  collapsed={true}
  collapsible={true}
  content={
    <div>
      Widgets
    </div>
  }
  dynamicClassName="class-name"
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  header="header"
  id="id"
  loadContent="whenExpanded"
  showHeaderIcon="right"
  visible={true}
>
  <section
    className="widget-accordion-group widget-accordion-group-collapsed class-name"
  >
    <header
      className="widget-accordion-group-header"
    >
      <div
        aria-controls="idContentWrapper"
        aria-disabled={false}
        aria-expanded={false}
        className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
        data-focusindex={0}
        id="idHeaderButton"
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        header
      </div>
    </header>
    <div
      aria-labelledby="idHeaderButton"
      className="widget-accordion-group-content-wrapper"
      data-focusindex={0}
      id="idContentWrapper"
      onTransitionEnd={[Function]}
      role="region"
    >
      <div
        className="widget-accordion-group-content"
      />
    </div>
  </section>
</AccordionGroup>
`;

exports[`AccordionGroup not collapsible displays the content when the group becomes visible 1`] = `
<section
  className="widget-accordion-group class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={true}
      aria-expanded={true}
      className="widget-accordion-group-header-button"
      data-focusindex={0}
      id="idHeaderButton"
      role="button"
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup not collapsible displays the content when the group is visible 1`] = `
<section
  className="widget-accordion-group class-name"
>
  <header
    className="widget-accordion-group-header"
  >
    <div
      aria-controls="idContentWrapper"
      aria-disabled={true}
      aria-expanded={true}
      className="widget-accordion-group-header-button"
      data-focusindex={0}
      id="idHeaderButton"
      role="button"
    >
      header
    </div>
  </header>
  <div
    aria-labelledby="idHeaderButton"
    className="widget-accordion-group-content-wrapper"
    data-focusindex={0}
    id="idContentWrapper"
    onTransitionEnd={[Function]}
    role="region"
  >
    <div
      className="widget-accordion-group-content"
    >
      <span>
        content
      </span>
    </div>
  </div>
</section>
`;

exports[`AccordionGroup render widgets when 'loadContent' is 'always' 1`] = `
<AccordionGroup
  animateContent={false}
  collapsed={true}
  collapsible={true}
  content={
    <div>
      Widgets
    </div>
  }
  dynamicClassName="class-name"
  generateHeaderIcon={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  header="header"
  id="id"
  loadContent="always"
  showHeaderIcon="right"
  visible={true}
>
  <section
    className="widget-accordion-group widget-accordion-group-collapsed class-name"
  >
    <header
      className="widget-accordion-group-header"
    >
      <div
        aria-controls="idContentWrapper"
        aria-disabled={false}
        aria-expanded={false}
        className="widget-accordion-group-header-button widget-accordion-group-header-button-clickable widget-accordion-group-header-button-icon-right"
        data-focusindex={0}
        id="idHeaderButton"
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        header
      </div>
    </header>
    <div
      aria-labelledby="idHeaderButton"
      className="widget-accordion-group-content-wrapper"
      data-focusindex={0}
      id="idContentWrapper"
      onTransitionEnd={[Function]}
      role="region"
    >
      <div
        className="widget-accordion-group-content"
      >
        <div>
          Widgets
        </div>
      </div>
    </div>
  </section>
</AccordionGroup>
`;
