// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import { Big } from "big.js";

// BEGIN EXTRA CODE
function cloneWithNewUrl(link, href) {
    const target = link.cloneNode();
    const search = new URL(link.href).search;
    target.href = href;
    const targetHref = new URL(target.href);
    targetHref.search = search;
    target.href = targetHref.toString();
    return target;
}
// END EXTRA CODE

/**
 * @param {string} iconUrl16x16
 * @param {string} iconUrl32x32
 * @param {string} appleTouchIconUrl
 * @returns {Promise.<void>}
 */
export async function SetFavicon(iconUrl16x16, iconUrl32x32, appleTouchIconUrl) {
	// BEGIN USER CODE
    const entries = [
        ['link[rel="icon"][sizes="16x16"]', iconUrl16x16, "16x16"],
        ['link[rel="icon"][sizes="32x32"]', iconUrl32x32, "32x32"],
        ['link[rel="apple-touch-icon"]', appleTouchIconUrl]
    ];
    const links = entries.reduce((acc, [selector, href, sizes]) => {
        const element = document.querySelector(selector);
        if (element) {
            acc.push(cloneWithNewUrl(element, href));
            element.remove();
        } else {
            const link = document.createElement("link");
            link.href = href;
            const bypassCacheHref = new URL(link.href);
            bypassCacheHref.searchParams.append("v", Date.now());
            link.href = bypassCacheHref.toString();
            link.rel = "icon";
            if (sizes) {
                link.sizes = sizes;
            }
            acc.push(link);
        }
        return acc;
    }, []);
    document.head.append(...links);
	// END USER CODE
}
